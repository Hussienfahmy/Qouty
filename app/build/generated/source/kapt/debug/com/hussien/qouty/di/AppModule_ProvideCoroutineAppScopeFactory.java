// Generated by Dagger (https://dagger.dev).
package com.hussien.qouty.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import kotlinx.coroutines.CoroutineScope;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCoroutineAppScopeFactory implements Factory<CoroutineScope> {
  private final AppModule module;

  public AppModule_ProvideCoroutineAppScopeFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public CoroutineScope get() {
    return provideCoroutineAppScope(module);
  }

  public static AppModule_ProvideCoroutineAppScopeFactory create(AppModule module) {
    return new AppModule_ProvideCoroutineAppScopeFactory(module);
  }

  public static CoroutineScope provideCoroutineAppScope(AppModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideCoroutineAppScope());
  }
}
