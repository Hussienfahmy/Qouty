// Generated by Dagger (https://dagger.dev).
package com.hussien.qouty.di;

import android.content.Context;
import android.content.res.AssetManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideAssetManagerFactory implements Factory<AssetManager> {
  private final AppModule module;

  private final Provider<Context> contextProvider;

  public AppModule_ProvideAssetManagerFactory(AppModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public AssetManager get() {
    return provideAssetManager(module, contextProvider.get());
  }

  public static AppModule_ProvideAssetManagerFactory create(AppModule module,
      Provider<Context> contextProvider) {
    return new AppModule_ProvideAssetManagerFactory(module, contextProvider);
  }

  public static AssetManager provideAssetManager(AppModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideAssetManager(context));
  }
}
