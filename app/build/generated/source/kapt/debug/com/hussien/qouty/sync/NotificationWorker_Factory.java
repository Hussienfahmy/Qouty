// Generated by Dagger (https://dagger.dev).
package com.hussien.qouty.sync;

import android.content.Context;
import androidx.work.WorkerParameters;
import com.hussien.qouty.data.QuotesRepository;
import com.hussien.qouty.ui.settings.SettingsDataStoreManager;
import com.hussien.qouty.utilities.NotificationUtils;
import dagger.internal.DaggerGenerated;
import javax.inject.Provider;
import kotlinx.coroutines.MainCoroutineDispatcher;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotificationWorker_Factory {
  private final Provider<QuotesRepository> repositoryProvider;

  private final Provider<SettingsDataStoreManager> settingsDataStoreManagerProvider;

  private final Provider<NotificationUtils> notificationUtilsProvider;

  private final Provider<MainCoroutineDispatcher> dispatcherMainProvider;

  public NotificationWorker_Factory(Provider<QuotesRepository> repositoryProvider,
      Provider<SettingsDataStoreManager> settingsDataStoreManagerProvider,
      Provider<NotificationUtils> notificationUtilsProvider,
      Provider<MainCoroutineDispatcher> dispatcherMainProvider) {
    this.repositoryProvider = repositoryProvider;
    this.settingsDataStoreManagerProvider = settingsDataStoreManagerProvider;
    this.notificationUtilsProvider = notificationUtilsProvider;
    this.dispatcherMainProvider = dispatcherMainProvider;
  }

  public NotificationWorker get(Context context, WorkerParameters workerParams) {
    return newInstance(context, workerParams, repositoryProvider.get(), settingsDataStoreManagerProvider.get(), notificationUtilsProvider.get(), dispatcherMainProvider.get());
  }

  public static NotificationWorker_Factory create(Provider<QuotesRepository> repositoryProvider,
      Provider<SettingsDataStoreManager> settingsDataStoreManagerProvider,
      Provider<NotificationUtils> notificationUtilsProvider,
      Provider<MainCoroutineDispatcher> dispatcherMainProvider) {
    return new NotificationWorker_Factory(repositoryProvider, settingsDataStoreManagerProvider, notificationUtilsProvider, dispatcherMainProvider);
  }

  public static NotificationWorker newInstance(Context context, WorkerParameters workerParams,
      QuotesRepository repository, SettingsDataStoreManager settingsDataStoreManager,
      NotificationUtils notificationUtils, MainCoroutineDispatcher dispatcherMain) {
    return new NotificationWorker(context, workerParams, repository, settingsDataStoreManager, notificationUtils, dispatcherMain);
  }
}
