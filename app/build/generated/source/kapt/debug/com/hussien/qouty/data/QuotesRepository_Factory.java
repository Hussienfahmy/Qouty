// Generated by Dagger (https://dagger.dev).
package com.hussien.qouty.data;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineDispatcher;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class QuotesRepository_Factory implements Factory<QuotesRepository> {
  private final Provider<QuotesDao> quotesDaoProvider;

  private final Provider<CoroutineDispatcher> ioDispatcherProvider;

  public QuotesRepository_Factory(Provider<QuotesDao> quotesDaoProvider,
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    this.quotesDaoProvider = quotesDaoProvider;
    this.ioDispatcherProvider = ioDispatcherProvider;
  }

  @Override
  public QuotesRepository get() {
    return newInstance(quotesDaoProvider.get(), ioDispatcherProvider.get());
  }

  public static QuotesRepository_Factory create(Provider<QuotesDao> quotesDaoProvider,
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    return new QuotesRepository_Factory(quotesDaoProvider, ioDispatcherProvider);
  }

  public static QuotesRepository newInstance(QuotesDao quotesDao,
      CoroutineDispatcher ioDispatcher) {
    return new QuotesRepository(quotesDao, ioDispatcher);
  }
}
